/*
 * TomiSoft Product Database Api
 *
 * This document describes the API provided by the TomiSoft.ProductCatalog.Server microservice. This microservice provides information about products, based on barcode.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sinkutamas@gmail.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using System.ComponentModel.DataAnnotations;
using TomiSoft.ProductCatalog.Server.OpenApiGenerated.Attributes;
using Microsoft.AspNetCore.Authorization;
using TomiSoft.ProductCatalog.Server.OpenApiGenerated.Models;

namespace TomiSoft.ProductCatalog.Server.OpenApiGenerated.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class ProductApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Gets a product by barcode</remarks>
        /// <param name="barcode">The barcode of the requested product (eg. EAN-13).</param>
        /// <param name="acceptLanguage">A list of the languages that the client accepts, as defined in RFC-7231, section 5.3.5. If not provided, or the server does not support any of the requested languages, the content will be returned in the server&#39;s default language. The operation with ID &#39;GetSupportedLanguages&#39; provides you all the languages supported by the server.</param>
        /// <response code="200">A product has been found with the given barcode</response>
        /// <response code="404">No products were found with the given barcode</response>
        /// <response code="500">Server error occurred</response>
        [HttpGet]
        [Route("/Product/{barcode}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(ProductInformationDto))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResultDto))]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorResultDto))]
        public abstract Task<IActionResult> GetByBarcode([FromRoute][Required]string barcode, [FromHeader]string acceptLanguage);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Saves a new product with the given barcode</remarks>
        /// <param name="barcode">The barcode of the requested product (eg. EAN-13).</param>
        /// <param name="postProductRequestDto"></param>
        /// <response code="204">The new product has been saved successfully.</response>
        /// <response code="400">The request could not be fulfilled because it contains incorrect data.</response>
        /// <response code="409">A product with the given barcode already exists.</response>
        /// <response code="500">Server error occurred</response>
        [HttpPost]
        [Route("/Product/{barcode}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResultDto))]
        [ProducesResponseType(statusCode: 409, type: typeof(ErrorResultDto))]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorResultDto))]
        public abstract Task<IActionResult> PostNewProduct([FromRoute][Required]string barcode, [FromBody]PostProductRequestDto postProductRequestDto);
    }
}
