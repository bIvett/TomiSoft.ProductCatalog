/*
 * TomiSoft Product Database Api
 *
 * This document describes the API provided by the TomiSoft.ProductCatalog.Server microservice. This microservice provides information about products, based on barcode.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sinkutamas@gmail.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using System.ComponentModel.DataAnnotations;
using TomiSoft.ProductCatalog.Server.OpenApiGenerated.Attributes;
using Microsoft.AspNetCore.Authorization;
using TomiSoft.ProductCatalog.Server.OpenApiGenerated.Models;

namespace TomiSoft.ProductCatalog.Server.OpenApiGenerated.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class SystemApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Gets the languages supported by the system</remarks>
        /// <response code="200">The request succeeded, and the server provided information about its language support</response>
        /// <response code="500">Server error occurred</response>
        [HttpGet]
        [Route("/SupportedLanguages")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(SystemSupportedLanguagesDto))]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorResultDto))]
        public abstract Task<IActionResult> GetSupportedLanguages();

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Returns a &#39;No content&#39; response when the service works properly. Can be used for health checking.</remarks>
        /// <response code="204">The request succeeded, meaning that the service is healthy and it is ready to accept requests.</response>
        /// <response code="500">Server error occurred</response>
        [HttpGet]
        [Route("/Healthz")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorResultDto))]
        public abstract Task<IActionResult> Healthz();
    }
}
